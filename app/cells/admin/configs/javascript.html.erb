<script type="text/javascript">

ConfigApp = new Backbone.Marionette.Application();

ConfigApp.ConfigManagement = (function(Backbone){

    Equipment = Backbone.Model.extend({
        schema : {
            description     : { type : 'Text', title : '<%= t "equipment-name" %>' }
        },
        urlRoot : '/equipment_types'
    });
    
    EquipmentCollection = Backbone.Collection.extend({
        model : Equipment
    });
    
    EquipmentLayout = Backbone.Marionette.Layout.extend({
        template: "#equipment-list-layout-template",
        
        regions : {
            equipmentControlRegion: "#equipment-control-div",
            equipmentRegion: "#equipment-region-div",
        },
    });

    var configRegion = new Backbone.Marionette.Region({
        el: "#config-area"
    });


    var tabLists = [];
    
    function clearDetails() {
        _.invoke(tabLists, 'reset' );
    };

    var Workspace = Backbone.Router.extend({
        routes : {
            'equipment_config' : 'equipment_config',
            'item_format_config' : 'item_format_config',
            'invitation_category_config' : 'invitation_category_config',
            'room_setups_config' : 'room_setups_config',
            'conference_config' : 'conference_config',
            'email_config' : 'email_config'
        },
        
        equipment_config : function() {
            configRegion.close();
            
            equipmentLayout = new EquipmentLayout();
            configRegion.show(equipmentLayout);
            
            TabUtils.createTabControl({
                template                : "#equipment-control-template",
                modelType               : Equipment,
                view_refresh_event      : "equipment:refresh",
                modal_create_title      : '<%= t "equipment-create-equipment" %>',
                region                  : equipmentLayout.equipmentControlRegion,
            });
            
            tabLists.push( AppUtils.createCollectionView({
                url                     : "/equipment_types.json",
                collectionType          : EquipmentCollection,
                region                  : equipmentLayout.equipmentRegion,
                template                : "#equipment-template",
                collection_attributes   : { "class" : "table table-striped table-condensed" },
                collection_tagName      : 'table',
                tagName                 : 'tr',
                view_refresh_event      : "equipment:refresh",
                modal_edit_title        : '<%= t "equipment-edit-equipment" %>',
                modal_edit              : true
            }) );
        },
        
        item_format_config : function() {
            configRegion.close();
        },
        
        invitation_category_config : function() {
            configRegion.close();
        },
        
        room_setups_config : function() {
            configRegion.close();
        },
        
        conference_config : function() {
            configRegion.close();
        },
        
        email_config : function() {
            configRegion.close();
        }
    });

    /*
     * 
     */
    return {
        init : function(options) {
            new Workspace();
            Backbone.history.start();
        }
    }
    
})(Backbone);

/*
 * 
 */
jQuery(document).ready(function() {
    ConfigApp.addInitializer(ConfigApp.ConfigManagement.init);
    ConfigApp.start({});
});

</script>
