<script type="text/javascript">

SurveyReportApp = new Backbone.Marionette.Application();

SurveyReportApp.SurveyReport = (function(Backbone){
    
    // TODO - we should only be able to edit the queries that belong to us....
    Query = Backbone.DeepModel.extend({
        urlRoot : '/survey_query', // TODO - check
        schema : {
            name            : { type : 'Text',      title : '<%= t "name" %>',  validators: ['required'] },
            survey_id       : { type : 'Select',    title : '<%= t "survey" %>',
                                options : <%= [].concat(Survey.find(:all).collect {|s| {'val' => s.id, 'label' => s.name} }).to_json.html_safe %> 
                              },
            shared          : { type : 'Checkbox',  title : '<%= t "shared" %>' },
            operation       : { type : 'Select',    title : '<%= t "operation" %>',
                                options : ['ALL', 'ANY']
                              },
            // Add in predicate list
            
        }
    });
    
    QueryLayout = Backbone.Marionette.Layout.extend({
        template: "#query-layout-template",
        
        regions : {
            queryControlRegion: "#query-control-div",
            queryRegion: "#query-region-div",
        },
    });


    // "survey_query_predicates": [
        // {
            // "created_at": "2013-05-05T23:34:45-04:00",
            // "id": 3,
            // "lock_version": 0,
            // "operation": "answered",
            // "survey_query_id": 3,
            // "survey_question_id": 34,
            // "updated_at": "2013-05-05T23:34:45-04:00",
            // "value": ""
        // }
    // ]
    
    var tabLists = [];
    var tabContent = [];
    
    function clearDetails() {
        alert("HHH");
        _.invoke(tabLists, 'reset' );
        _.invoke(tabContent, 'clear' );
    };

    function showQuery(id) {
        // alert("QUERY SELECTED ddd");
        // queryLayout = new QueryLayout();
        // queryLayout.render();
        // $('#query-view').html(queryLayout.el);
        tabContent.push( TabUtils.createTabContent({
            modelType : Query,
            url : "/survey_query/" + id, // TODO - check
            template : '#query-view-template',
            place :'#query-view',
            // id : id,
            // id_name : 'person_id',
            // newTitle : "Create Registration",
            editTitle : "Edit Query",
        }) ); // TODO - we need a mechanism to provide a callback to the view on edit

        
        // Retreive the query from the server
        // Display it in the query area (need a control for the edit)
    };
    
    return {
        init : function() {
            // showQueries();
        },
        
        clearDetails : function() {
        },
        
        selectQuery : function(id) {
            // clearDetails();
            showQuery(id);
        },
    }

})(Backbone);

/*
 * 
 */
jQuery(document).ready(function() {
    SurveyReportApp.start();
    SurveyReportApp.SurveyReport.init();
});

</script>