<script type="text/javascript">

MobileImageApp = new Backbone.Marionette.Application();

MobileImageApp.ImageManagement = (function(Backbone){
    var eventAggregator = AppUtils.eventAggregator;
    
    // TODO
    MobileTheme = Backbone.Model.extend({
        urlRoot : '/mobile/default_bio_image',
        schema : {
            default_bio_image : { type : 'CLImage', title : 'Pic',
                cl_image_upload_tag : '<%= cl_image_upload_tag(:default_bio_image) %>'
            }
        }
    });
    
    Picture = Backbone.RelationalModel.extend({
        schema : {
            picture : { type : 'CLImage', title : 'Pic',
                cl_image_upload_tag : '<%= cl_image_upload_tag(:picture) %>'
            }
        },
        urlRoot : '/external_images'
    });
    PictureCollection = Backbone.Collection.extend({
        model : Picture
    });

    ItemFormat = Backbone.RelationalModel.extend({ // DeepModel
        urlRoot : '/formats',
        relations : [{
            type           : Backbone.HasMany,
            key            : 'external_images',
            relatedModel   : 'Picture',
            collectionType : 'PictureCollection'
        }]
    });
    
    ItemFormatCollection = Backbone.Collection.extend({
        model : ItemFormat
    });

    ItemFormatView = Marionette.ItemView.extend({
        template : '#item-format-template',
        events : {
            "click .large-image-create-button"  : "create_large_image",
            "click .large-image-edit-button"    : "edit_large_image",
            "click .medium-image-create-button"  : "create_medium_image",
            "click .medium-image-edit-button"    : "edit_medium_image",
        },

        initialize : function() {
            this.listenTo(this.model, 'change', this.render); // also need collection change
            // also need collection change
            eventAggregator.on("refreshFormatList", this.render, this);
        },

        create_large_image : function(event) {
            this.create_image("largecard","Create Large Image");
        },
        edit_large_image : function(event) {
            this.edit_image("largecard","Edit Large Image");
        },
        
        create_medium_image : function(event) {
            this.create_image("mediumcard","Create Medium Image");
        },
        edit_medium_image : function(event) {
            this.edit_image("mediumcard","Edit Medium Image");
        },
        
        create_image : function(cardtype, title) {
            var model = this.model;
            var pic = new Picture();
            var format_id = model.id;
            pic.url = '/external_images/Format/' + format_id + '/' + cardtype
            mdl = new AppUtils.ModelModal({
                        model : pic,
                        title : title,
                        refresh : function(mdl) {
                            model.set('external_images', mdl);
                        }
                    });
            mdl.render();
        },
        
        edit_image : function(cardtype, title) {
            var img = _.find(this.model.get('external_images').models, function(im) { return im.get('use') == cardtype });
            mdl = new AppUtils.ModelModal({
                        model : img,
                        title : title,
                        refresh : function(mdl) {
                            eventAggregator.trigger("refreshFormatList");
                        }
                    });
            mdl.render();
        }
    });
    
    ItemFormatCollectionView = Backbone.Marionette.CollectionView.extend({
        itemView : ItemFormatView,
        
        refreshList : function() {
            this.collection.fetch({});
        }
    });



    ConfigLayout = Backbone.Marionette.Layout.extend({
        template: "#config-list-layout-template",
        
        regions : {
            // titleRegion     : "#config-title-div",
            controlRegion   : "#config-control-div",
            // configRegion    : "#config-region-div",
        },
    });


    var Workspace = Backbone.Router.extend({

        routes : {
            'item_format_images' : 'item_format_images',
            'people_images'      : 'people_images'
        },
        
        item_format_images : function() {
            layout = new ConfigLayout();
            layout.render();
            $('#images-control-area').html(layout.el);
            collection = new ItemFormatCollection();
            collection.url = "/formats.json";
            collection.fetch({
                success : function(col) {
                    var collectionView = new ItemFormatCollectionView({
                                        itemViewOptions     : {
                                            tagName         : 'tr'
                                        },
                                        collection          : col,
                                        attributes          : { "class" : "table table-striped table-condensed" },
                                        // view_refresh_event  : options.view_refresh_event,
                                        tagName             : 'table' 
                                    });
                        
                    layout.controlRegion.show(collectionView);
                }
            });
        },
        
        people_images : function() {
            TabUtils.createTabContent({
                modelType : MobileTheme,
                url : "/mobile/default_bio_image",
                template : '#default-image-template',
                place : '#images-control-area',
                newTitle : '<%= t "create-image" %>',
                editTitle : '<%= t "edit-image" %>',
            });
        }
    });

    /*
     * 
     */
    return {
        init : function(options) {
            new Workspace();
            Backbone.history.start();
        }
    }
    
})(Backbone);

/*
 * 
 */
jQuery(document).ready(function() {
    MobileImageApp.addInitializer(MobileImageApp.ImageManagement.init);
    MobileImageApp.start({});
});

</script>
