<script type="text/javascript">

PublicationsApp = new Backbone.Marionette.Application();

PublicationsApp.PrintManagement = (function(Backbone){
    
    var people = <%= [].concat(PeopleService.findAssignedParticipants.collect {|p| {'id' => p.id, 'text' => p.getFullPublicationName}}).to_json.html_safe %>;

    var GenericForm = Backbone.Form.extend({
        schema : {
            page_size : { type : 'Select', title : '<%= t "page-size" %>', 
                          options : <%= [[' ',' ']].concat(Prawn::Document::PageGeometry::SIZES.collect {|k,v| {'val' => k, 'label' => k} }).to_json.html_safe %> 
                },
            orientation : { type : 'Select', title : '<%= t "orientation" %>', 
                          options : { landscape : 'Landscape' , portrait : 'Portrait'} 
                },
        },
    
        data : {
            page_size : 'LETTER',
            orientation : 'portrait'
        }    
    });
    
    var TableTentForm = Backbone.Form.extend({
        schema : {
            page_size : { type : 'Select', title : '<%= t "page-size" %>', 
                          options : <%= [[' ',' ']].concat(Prawn::Document::PageGeometry::SIZES.collect {|k,v| {'val' => k, 'label' => k} }).to_json.html_safe %> 
                },
            people : { type : 'Select2', title : '<%= t "publications-people" %>', 
                        config : {
                            multiple: true,
                            maximumSelectionSize : -1,
                            query: function (query) {
                                var data = {
                                    results: _.filter(people, function(x) { return x.text.toLowerCase().indexOf(query.term.toLowerCase()) != -1; })
                                };
                                query.callback(data);
                            }
                        }
                }
        },
        
        data : {
            page_size : 'LETTER'
        }
    });
    
    var BadgeForm = Backbone.Form.extend({
        schema : {
            label_type : { type : 'Select', title : '<%= t "label-type" %>', 
                            options : <%= [].concat(LabelDimensions.find(:all).collect {|s| {'val' => s.id, 'label' => s.name} }).to_json.html_safe %> },
            people : { type : 'Select2', title : '<%= t "publications-people" %>', 
                        config : {
                            multiple: true,
                            maximumSelectionSize : -1,
                            query: function (query) {
                                var data = {
                                    results: _.filter(people, function(x) { return x.text.toLowerCase().indexOf(query.term.toLowerCase()) != -1; })
                                };
                                query.callback(data);
                            }
                        }
                }
        },
        
        data : {
        }
    });
    
    var Workspace = Backbone.Router.extend({
        routes : {
            'report/:query' : 'report',
            'table_tents'   : 'table_tents',
            'badge_labels'  : 'badge_labels'
        },
        
        report : function(query) {
            ReportBase.reportRegion.close();
            ReportBase.resultRegion.close();
            ReportBase.reportRegion.show(new ReportBase.PublicationView({
                form        : GenericForm,
                endPoint    : '/planner_reports/' + query
            }));
        },
        
        table_tents : function() {
            ReportBase.reportRegion.close();
            ReportBase.resultRegion.close();
            ReportBase.reportRegion.show(new ReportBase.PublicationView({
                form        : TableTentForm,
                endPoint    : '/planner_reports/table_tents'
            }));
        },
        
        badge_labels : function() {
            ReportBase.reportRegion.close();
            ReportBase.resultRegion.close();
            ReportBase.reportRegion.show(new ReportBase.PublicationView({
                form        : BadgeForm,
                endPoint    : '/planner_reports/badge_labels'
            }));
        }
    });
    
    /*
     * 
     */
    return {
        init : function(options) {
            new Workspace();
            Backbone.history.start();
        }
    }
    
})(Backbone);

/*
 * 
 */
jQuery(document).ready(function() {
    PublicationsApp.addInitializer(PublicationsApp.PrintManagement.init);
    PublicationsApp.start({});
});

</script>
