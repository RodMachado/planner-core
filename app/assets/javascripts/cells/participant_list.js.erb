var baseUrl = "/participants/getList.json";
var tagQueryList = {};

jQuery(document).ready(function() {
    // The grid containing the list of paricipants
    jQuery("#participants").jqGrid({
        url: baseUrl,
        datatype: 'JSON',
        jsonReader :{
            repeatitems : false,
            page: "currpage",
            records: "totalrecords",
            root : "rowdata",
            total: "totalpages",
            id : "id",
        },
        mtype: 'POST',
//        colNames: ['First Name', 'Last Name', 'Suffix', 'Invite Status', 'Invitation<br/>Category', 'Acceptance', 'Survey', 'Publication<br/>First Name', 'Publication<br/>Last Name', 'Pub<br/>Suffix', 'Comments', 'lock'],
        colModel: [{
            name: 'first_name',
            label: 'First Name',
            index: 'people.first_name',
            width: 200,
            editable: true,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 1,
                label: "First Name",
//                elmprefix: ""
            },
            editrules: {
                required: false
            }
        }, {
            name: 'last_name',
            label: 'Last Name',
            index: 'people.last_name',
//            width: 150,
            editable: true,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 2,
                label: "Last Name (*)",
//                elmprefix: "(*)"
            },
            editrules: {
                required: true
            }
        }, {
            name: 'suffix',
            label: 'Suffix',
            index: 'people.suffix',
//            width: 50,
            editable: true,
            search: false,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 3,
                label: "Suffix",
//                elmprefix: ""
            },
            editrules: {
                required: false
            }
        }, {
            name: 'invite_status',
            label: 'Invite Status',
            index: 'invitestatus_id',
//            width: 100,
            editable: true,
            edittype: "select",
            search: true,
            stype: "select",
            searchoptions: {
                dataUrl: '/participants/invitestatuslistwithblank'
            },
            editoptions: {
                dataUrl: '/participants/invitestatuslist',
                defaultValue: 'Not Set'
            },
            formoptions: {
                rowpos: 4,
//                elmprefix: "&nbsp;&nbsp;&nbsp;&nbsp;"
            }
        }, {
            name: 'invitation_category',
            label: 'Invitation<br/>Category',
            index: 'invitation_category_id',
//            width: 100,
            editable: true,
            edittype: "select",
            search: true,
            stype: "select",
            searchoptions: {
                dataUrl: '/invitation_categories/list'
            },
            editoptions: {
                dataUrl: '/invitation_categories/list',
                defaultValue: 'Not Set'
            },
            formoptions: {
                rowpos: 5,
//                elmprefix: "&nbsp;&nbsp;&nbsp;&nbsp;"
            }
        }, {
            name: 'acceptance_status',
            label: 'Acceptance',
            index: 'acceptance_status_id',
//            width: 100,
            editable: true,
            edittype: "select",
            search: true,
            stype: "select",
            searchoptions: {
                dataUrl: '/participants/acceptancestatuslistwithblank'
            },
            editoptions: {
                dataUrl: '/participants/acceptancestatuslist',
                defaultValue: 'Not Set'
            },
            formoptions: {
                rowpos: 6,
//                elmprefix: "&nbsp;&nbsp;&nbsp;&nbsp;"
            }
        }, {
            name: 'has_survey',
            label: 'Survey',
//            width: 50,
            editable: false,
            sortable: false,
            search: false,
            hidden: false
        }, {
            name: 'pseudonym.first_name',
            label: 'Publication<br/>First Name',
//            width: 150,
            index: 'pseudonyms.first_name',
            editable: true,
            sortable: false,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 7,
                label: "Pub First Name"
            }
        }, {
            name: 'pseudonym.last_name',
            label: 'Publication<br/>Last Name',
//            width: 150,
            index: 'pseudonyms.last_name',
            editable: true,
            sortable: false,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 8,
                label: "Pub Last Name"
            }
        }, {
            name: 'pseudonym.suffix',
            label: 'Publication<br/>Suffix',
//            width: 50,
            index: 'pseudonyms.suffix',
            editable: true,
            sortable: false,
            search: false,
            editoptions: {
//                size: 20
            },
            formoptions: {
                rowpos: 9,
                label: "Pub Suffix"
            }
        }, {
            name: 'comments',
            index: 'people.comments',
            hidden: true,
            editable: true,
            edittype: 'textarea',
            sortable: false,
            search: false,
//            width : 200,
            editoptions: {
//                size: 20
//                rows : 3,
//                cols : 10
            },
            editrules: {
                edithidden: true
            },
            formoptions: {
                rowpos: 10,
                label: "Comments"
            },
//            cellattr: function (rowId, tv, rawObject, cm, rdata) { 
//                    return " style=overflow: hidden; "
//                 }
        }, {
            name: 'lock_version',
//            width: 3,
            index: 'lock_version',
            hidden: true,
            editable: true,
            sortable: false,
            search: false,
            formoptions: {
                rowpos: 11,
                label: "lock"
            }
        }],
        pager: jQuery('#pager'),
        rowNum: 10,
        autowidth: true,
        shrinkToFit: true,
        height: "100%",
        rowList: [10, 20, 30],
        pager: jQuery('#pager'),
        sortname: 'people.last_name',
        sortorder: "asc",
        viewrecords: true,
        imgpath: 'stylesheets/cupertino/images',
        caption: caption,
        editurl: '/participants?plain=true',
        onSelectRow: function(ids){
//            loadTabs(ids);
            return false;
        }
    });
    
    // Set up the pager menu for add, delete, and search
    jQuery("#participants").navGrid('#pager', {
        view: false,
        search: false
    }, //options
    { // edit options
        width: 350,
        reloadAfterSubmit: true,
        jqModal: true,
        closeOnEscape: true,
        closeAfterEdit: true,
        bottominfo: "Fields marked with (*) are required",
        afterSubmit: processResponse,
        mtype: 'PUT',
        onclickSubmit : function(params, postdata) {
            params.url = '/participants/' + postdata.participants_id;
        },
    }, // edit options
    { // add options
        width: 350,
        reloadAfterSubmit: false,
        jqModal: true,
        closeOnEscape: true,
        bottominfo: "Fields marked with (*) are required",
        afterSubmit: processAddResponse,
        closeAfterAdd: true
    }, // add options
    { // del options
        reloadAfterSubmit: false,
        jqModal: true,
        closeOnEscape: true,
        mtype: 'DELETE',
        onclickSubmit : function(params, postdata) {
            params.url = '/participants/' + postdata;
        },
    }, // del options
    {  // view options
        jqModal: true,
        closeOnEscape: true
    }
    );
    
    jQuery("#participants").jqGrid('filterToolbar', {
        stringResult: true,
        searchOnEnter: false
    });
}); 


function processResponse(response, postdata){
    // examine return for problem - look for errorExplanation in the returned HTML
    var text = $(response.responseText).find(".errorExplanation");
    if (text.size() > 0) {
        text.css('font-size', '6pt');
        text = $("<div></div>").append(text);
        return [false, text.html()];
    }
    
//    var $tabs = $('#particpanttabs').tabs();
//    var selected = $tabs.tabs('option', 'selected');
//    $tabs.tabs('load', selected);
    
    return [true, "Success", ""];
}

function processAddResponse(response, postdata){
    // examine return for problem - look for errorExplanation in the returned HTML
    var text = jQuery(response.responseText).find(".errorExplanation");
    if (text.size() > 0) {
        text.css('font-size', '6pt');
        text = jQuery("<div></div>").append(text);
        return [false, text.html()];
    }
    
    // get the id of the new entry and change the id of the 
    var id = jQuery(response.responseText).find("#personid");
    
    return [true, "Success", id.text()]; // Last param is the id of the new item
}

