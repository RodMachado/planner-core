xlsx_package.use_shared_strings = true
wb = xlsx_package.workbook

wb.add_worksheet(name: "Participants") do |sheet|

    titles =     [
        'Name',
        'Job Title',
        'Company',
        'Photo Url',
        'Bio'
    ]
    titles.concat Array.new(20) {|e| ['Publication Reference Number ' + (e+1).to_s, 
                                        'Time ' + (e+1).to_s, 
                                        'Day ' + (e+1).to_s, 
                                        'Duration ' + (e+1).to_s, 
                                        'Item ' + (e+1).to_s, 
                                        'Item Description '+ (e+1).to_s,
                                        'Room ' + (e+1).to_s, 
                                        'Venue ' + (e+1).to_s 
                                    ] }.flatten # TODO - check, split time and item into seperate cols
    
    sheet.add_row titles
    
    @people.each do |p|
        row = []
        row << p.getFullPublicationName
        row << p.job_title
        row << p.company
        row << (p.bio_image ? p.bio_image.bio_picture.url : '')
        row << p.bio
                
        p.programmeItemAssignments.each do |ia|
            if ia.programmeItem.time_slot && (@allowed_roles.include? ia.role)
                row << (ia.programmeItem.pub_reference_number ? ia.programmeItem.pub_reference_number : '')
                row << (ia.programmeItem.time_slot.start + Time.zone.utc_offset.seconds)
                row << (ia.programmeItem.time_slot.start.strftime('%A'))
                row << (ia.programmeItem.duration ? ia.programmeItem.duration.to_s : '')
                row << (ia.programmeItem.short_title.blank? ? ia.programmeItem.title.gsub("\n","") : ia.programmeItem.short_title.gsub("\n",""))
                row << (ia.programmeItem.precis ? ia.programmeItem.precis.gsub("\n","") : '')
                row << (ia.programmeItem.room ? ia.programmeItem.room.name : '')
                row << (ia.programmeItem.room.venue ? ia.programmeItem.room.venue.name : '')
            end
        end
        
        sheet.add_row row
    end

end
